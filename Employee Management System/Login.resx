<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ScniHwvAsnkAAAAASUVORK5CYII=
</value>
  </data>
</root>